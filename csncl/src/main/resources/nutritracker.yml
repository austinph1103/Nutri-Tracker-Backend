openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "NutriTracker"
  license:
    name: "MIT"
servers:
  - url: "http://localhost:8080/"
paths:
  /userprofile/{userId}:
    parameters:
      - name: "userId"
        in: "path"
        description: "The id of user to retrieve"
        required: true
        schema:
          type: "integer"
          format: "int32"
    get:
      summary: "Get an user profile with according userId"
      operationId: "getUserById"
      tags:
        - "users"
      responses:
        '200':
          description: "User retrieved successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        '400':
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: "Create an User Profile"
      operationId: "createUser"
      tags:
        - "users"
      responses:
        '201':
          description: "User profile created successfully"
        '400':
          description: "Invalid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '409':
          description: "User already exists"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    UserProfile:
      type: "object"
      required:
        - "userId"
        - "name"
      properties:
        userId:
          type: "integer"
          description: "ID of the user"
        name:
          type: "string"
          description: "Name of the user"
        dob:
          type: "string"
          format: "date"
          description: "Date of birth of the user"
        sex:
          type: "string"
          enum:
            - "male"
            - "female"
            - "other"
          description: "Gender of the user"
        emails:
          type: "array"
          items:
            type: "string"
          description: "List of email addresses associated with the user"
        height:
          type: "number"
          format: "double"
          description: "Height of the user in cm"
        weight:
          type: "number"
          format: "double"
          description: "Weight of the user in kg"
        bloodType:
          type: "string"
          enum:
            - "A"
            - "B"
            - "O"
            - "AB"
          description: "Blood type of the user"
    Error:
      type: "object"
      required:
        - "code"
        - "message"
      properties:
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"